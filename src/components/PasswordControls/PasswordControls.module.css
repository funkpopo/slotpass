.passwordControls {
  background: var(--bg-secondary);
  border-radius: var(--border-radius-lg);
  border: 2px solid var(--border-color);
  padding: var(--spacing-lg);
  box-shadow: 
    0 4px 16px rgba(0, 0, 0, 0.4),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
  max-width: 500px;
  margin: 0 auto;
}

.controlsHeader {
  text-align: center;
  margin-bottom: var(--spacing-lg);
  padding-bottom: var(--spacing-md);
}

.controlsTitle {
  font-size: var(--font-size-xl);
  font-weight: bold;
  color: var(--text-primary);
  margin-bottom: var(--spacing-xs);
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
}

.subtitle {
  font-size: var(--font-size-sm);
  color: var(--text-secondary);
  font-weight: 300;
}

.controlsBody {
  margin-bottom: var(--spacing-lg);
}

.lengthControl {
  margin-bottom: var(--spacing-lg);
}

.optionsSection {
  margin-bottom: var(--spacing-xl);
  padding: var(--spacing-md);
  background: rgba(255, 255, 255, 0.02);
  border-radius: var(--border-radius-md);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.optionsTitle {
  font-size: var(--font-size-base);
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: var(--spacing-md);
  text-align: center;
}

.switchGrid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var(--spacing-sm);
}

.switchItem {
  display: flex;
  align-items: center;
}

.switchLabel {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  cursor: pointer;
  font-size: var(--font-size-sm);
  color: var(--text-secondary);
  user-select: none;
  width: 100%;
}

.switchInput {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}

.switchSlider {
  position: relative;
  display: inline-block;
  width: 36px;
  height: 20px;
  background: var(--bg-tertiary);
  border-radius: 20px;
  border: 1px solid var(--border-color);
  transition: all var(--transition-fast);
  flex-shrink: 0;
}

.switchSlider::before {
  content: '';
  position: absolute;
  height: 16px;
  width: 16px;
  left: 2px;
  top: 1px;
  background: var(--text-muted);
  border-radius: 50%;
  transition: all var(--transition-fast);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

.switchInput:checked + .switchSlider {
  background: var(--accent-primary);
  border-color: var(--accent-primary);
}

.switchInput:checked + .switchSlider::before {
  transform: translateX(16px);
  background: white;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.switchInput:disabled + .switchSlider {
  opacity: 0.6;
  cursor: not-allowed;
}

.switchInput:disabled + .switchSlider::before {
  cursor: not-allowed;
}

.switchLabel:has(.switchInput:disabled) {
  cursor: not-allowed;
  opacity: 0.6;
}

.switchText {
  flex: 1;
  font-weight: 500;
}

.lengthLabel {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: var(--font-size-base);
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: var(--spacing-md);
}

.lengthValue {
  background: var(--accent-primary);
  color: var(--bg-primary);
  padding: var(--spacing-xs) var(--spacing-sm);
  border-radius: var(--border-radius-sm);
  font-weight: bold;
  min-width: 2.5em;
  text-align: center;
  box-shadow: 0 2px 4px rgba(76, 175, 80, 0.3);
}

.lengthSlider {
  position: relative;
}

.slider {
  width: 100%;
  height: 8px;
  border-radius: 4px;
  background: var(--bg-primary);
  outline: none;
  border: 1px solid var(--border-color);
  cursor: pointer;
  transition: all var(--transition-fast);
}

.slider::-webkit-slider-thumb {
  appearance: none;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  background: var(--accent-primary);
  border: 2px solid var(--text-primary);
  cursor: pointer;
  box-shadow: 
    0 2px 8px rgba(76, 175, 80, 0.4),
    0 0 0 1px rgba(255, 255, 255, 0.1);
  transition: all var(--transition-fast);
}

.slider::-webkit-slider-thumb:hover {
  transform: scale(1.1);
  box-shadow: 
    0 4px 12px rgba(76, 175, 80, 0.6),
    0 0 0 2px rgba(255, 255, 255, 0.2);
}

.slider::-moz-range-thumb {
  width: 24px;
  height: 24px;
  border-radius: 50%;
  background: var(--accent-primary);
  border: 2px solid var(--text-primary);
  cursor: pointer;
  box-shadow: 0 2px 8px rgba(76, 175, 80, 0.4);
}

.slider:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.slider:disabled::-webkit-slider-thumb,
.slider:disabled::-moz-range-thumb {
  cursor: not-allowed;
  transform: none;
}

.sliderLabels {
  display: flex;
  justify-content: space-between;
  margin-top: var(--spacing-xs);
  padding: 0 12px;
}

.sliderLabel {
  font-size: var(--font-size-sm);
  color: var(--text-muted);
  font-weight: 500;
}

.generateSection {
  text-align: center;
}

.generateButton {
  background: var(--accent-secondary);
  color: var(--text-primary);
  border: none;
  border-radius: var(--border-radius-md);
  padding: var(--spacing-md) var(--spacing-xl);
  font-size: var(--font-size-lg);
  font-weight: bold;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  margin: 0 auto var(--spacing-sm);
  box-shadow: 
    0 4px 16px rgba(255, 107, 53, 0.4),
    inset 0 1px 0 rgba(255, 255, 255, 0.2);
  transition: all var(--transition-fast);
  position: relative;
  overflow: hidden;
}

.generateButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.2);
  transition: left 0.5s ease;
}

.generateButton:hover {
  transform: translateY(-2px);
  box-shadow: 
    0 6px 20px rgba(255, 107, 53, 0.6),
    inset 0 1px 0 rgba(255, 255, 255, 0.3);
}

.generateButton:hover::before {
  left: 100%;
}

.generateButton:active {
  transform: translateY(0);
  box-shadow: 
    0 2px 8px rgba(255, 107, 53, 0.4),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

.generateButton:disabled {
  background: var(--bg-tertiary);
  color: var(--text-muted);
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}

.generateButton.generating {
  background: #ffeb3b;
  animation: buttonPulse 1s ease-in-out infinite;
}

.buttonIcon {
  font-size: 1.2em;
  display: flex;
  align-items: center;
}

.buttonText {
  font-size: inherit;
}

.generateHint {
  font-size: var(--font-size-sm);
  color: var(--text-muted);
  font-style: italic;
}

.securityInfo {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
  padding: var(--spacing-md);
  background: var(--bg-primary);
  border-radius: var(--border-radius-md);
  border: 1px solid var(--border-color);
}

.securityItem {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  font-size: var(--font-size-sm);
}

.securityIcon {
  font-size: 1em;
  min-width: 1.2em;
}

.securityText {
  color: var(--text-secondary);
  line-height: 1.4;
}

/* 动画关键帧 */
@keyframes buttonPulse {
  0%, 100% { 
    transform: translateY(-2px) scale(1);
    box-shadow: 0 6px 20px rgba(255, 235, 59, 0.6);
  }
  50% { 
    transform: translateY(-2px) scale(1.02);
    box-shadow: 0 8px 24px rgba(255, 235, 59, 0.8);
  }
}

/* 响应式设计 */
@media (max-width: 768px) {
  .passwordControls {
    padding: var(--spacing-md);
    margin: 0 var(--spacing-sm);
  }
  
  .controlsTitle {
    font-size: var(--font-size-lg);
  }
  
  .switchGrid {
    grid-template-columns: 1fr;
    gap: var(--spacing-xs);
  }
  
  .generateButton {
    padding: var(--spacing-sm) var(--spacing-lg);
    font-size: var(--font-size-base);
  }
  
  .securityInfo {
    padding: var(--spacing-sm);
  }
  
  .securityItem {
    flex-direction: row;
    align-items: flex-start;
    gap: var(--spacing-xs);
  }
}

@media (max-width: 480px) {
  .lengthLabel {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--spacing-xs);
  }
  
  .lengthValue {
    align-self: flex-end;
  }
  
  .generateButton {
    width: 100%;
    justify-content: center;
  }
}

/* 高对比度模式适配 */
@media (prefers-contrast: high) {
  .passwordControls {
    border-width: 3px;
    border-color: var(--text-primary);
  }
  
  .generateButton {
    border: 2px solid var(--text-primary);
  }
  
  .securityInfo {
    border-width: 2px;
    border-color: var(--text-primary);
  }
}

/* 减少动画模式 */
@media (prefers-reduced-motion: reduce) {
  .generateButton.generating {
    animation: none;
  }
  
  .generateButton::before {
    display: none;
  }
  
  .generateButton:hover {
    transform: none;
  }
}